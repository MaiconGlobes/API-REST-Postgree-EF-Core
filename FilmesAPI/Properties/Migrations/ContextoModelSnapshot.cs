// <auto-generated />
using System;
using EF_Core_Postgre.Src.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FilmesAPI.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FilmesAPI.Models.Filme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("diretor")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int?>("duracao")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("genero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<float?>("imdb")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("FILME", "public");
                });

            modelBuilder.Entity("FilmesAPI.Src.Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<Guid?>("filmeId")
                        .IsRequired()
                        .HasColumnType("uuid");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("character varying(35)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("filmeId");

                    b.HasIndex("url")
                        .IsUnique();

                    b.ToTable("SITE", "public");
                });

            modelBuilder.Entity("FilmesAPI.Src.Models.Site", b =>
                {
                    b.HasOne("FilmesAPI.Models.Filme", "Filmes")
                        .WithMany("sites")
                        .HasForeignKey("filmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filmes");
                });

            modelBuilder.Entity("FilmesAPI.Models.Filme", b =>
                {
                    b.Navigation("sites");
                });
#pragma warning restore 612, 618
        }
    }
}
